#if "@formatNormal@" == "<auto compression>"
	#if TARGET_PLATFORM == "xenon"
		#define NORMAL_MAP_FORMAT	"DXN"
	#else
		#define NORMAL_MAP_FORMAT	"DXT5"
	#endif
#else
	#define NORMAL_MAP_FORMAT	"@formatNormal@"
#endif

//
// default images
//
#define COLOR_SUFFIX	"c0"

#if "@noStreamDetail@" == "1"
#define DETAIL_STREAMABLE
#else
#define DETAIL_STREAMABLE streamable
#endif

#if ("$normalMap$" == "" || "$normalMap$" == "$identityNormalMap") && "$specColorMap$" == "" && "$cosinePowerMap$" == ""
	#define NORMAL_MAP_TILE 	"tile both"
	#define NORMAL_MAP_FILTER	"nomip nearest"
	#define NORMAL_MAP_IMAGE 	"$identityNormalMap"
	#define NORMAL_MAP_ANIMRATE	0
	#define NORMAL_MAP_NOPICMIP	1

	#define USE_SPEC_MAP	0
	#define NORMAL_SUFFIX	""
	#define SPEC_SUFFIX		""
#else
	#if "$normalMap$" == "" || "$normalMap$" == "$identityNormalMap"
		#define NORMAL_MAP_TILE 	"tile both"
		#define NORMAL_MAP_FILTER	"nomip nearest"
		#define NORMAL_MAP_IMAGE 	"$identityNormalMap"
		#define NORMAL_MAP_NOPICMIP	1
		#define NORMAL_SUFFIX		""
	#else
		#define NORMAL_MAP_TILE		"@tileNormal@"
		#define NORMAL_MAP_FILTER	"@filterNormal@"
		#define NORMAL_MAP_IMAGE	"$normalMap$"
		#define NORMAL_MAP_NOPICMIP	@nopicmipNormal@
		#define NORMAL_SUFFIX		"n0"
	#endif

	#if "$specColorMap$" == "" && "$cosinePowerMap$" == ""
		#define USE_SPEC_MAP 0
		#define SPEC_SUFFIX			""
	#else
		#define USE_SPEC_MAP 1
		#define SPEC_SUFFIX			"s0"

		#if "$specColorMap$" != ""
			#define SPEC_COLOR_IMAGE	"$specColorMap$"
		#else
			#define SPEC_COLOR_IMAGE	"$white"
		#endif
		#if "$cosinePowerMap$" != ""
			#define COSINE_POWER_IMAGE	"$cosinePowerMap$"
		#else
			#define COSINE_POWER_IMAGE	"$white"
		#endif

		#if "@formatSpecular@" == "<auto compression>"
			#define SPECULAR_FORMAT		"DXT5"
		#else
			#define SPECULAR_FORMAT		"@formatSpecular@"
		#endif
	#endif
#endif

#define	USE_DETAIL_MAP	("$detailMap$" != "" && "@materialType@" == "model phong")
#if USE_DETAIL_MAP
	#define DETAIL_SUFFIX	"d0"
#else
	#define DETAIL_SUFFIX	""
#endif

#include "commonsetup.template"

#if @texScroll@
	#define TEX_SCROLL_SUFFIX "_scroll"
#else
	#define TEX_SCROLL_SUFFIX ""
#endif


#if @scorchable@
	#define SCORCH_SUFFIX "_sco"
#else
	#define SCORCH_SUFFIX ""
#endif
#if "@heroLight@" == "1" 
	#define HERO_SUFFIX "_hero"
#else
	#define HERO_SUFFIX ""
#endif


#define MAT_FEATURE_SUFFIX "_eyeball"


#if "@customString@" == "Skin"
	#define SKIN_SUFFIX "_skin"
	#if "@blendFunc@" != "Replace" || "@alphaTest@" != "Always"
		#error "Only Replace Always materials support the Skin shader."
	#endif
#else
	#define SKIN_SUFFIX ""
#endif

#if @noReceiveDynamicShadow@
	#define NAME_PREFIX "l"
#else
	#define NAME_PREFIX "l_sm"
#endif

#if "@blendFunc@" == "Add"
	#if SPEC_SUFFIX != ""
		#error "specular maps are not allowed on additive phong materials"
	#endif
	#if TEX_SCROLL_SUFFIX != ""
		#error "tex scroll not allowed on additive phong materials"
	#endif
	#if USE_DETAIL_MAP
		#error "detail map not allowed on additive phong materials"
	#endif
	techniqueSet( NAME_PREFIX + "_a0c0" );
#elif "@blendFunc@" == "Replace"
	#if "@alphaTest@" == "Always"
		techniqueSet( NAME_PREFIX + TEX_SCROLL_SUFFIX + SKIN_SUFFIX + "_r0" + COLOR_SUFFIX + DETAIL_SUFFIX + NORMAL_SUFFIX + SPEC_SUFFIX + SCORCH_SUFFIX + MAT_FEATURE_SUFFIX + HERO_SUFFIX );
	#else
		techniqueSet( NAME_PREFIX + TEX_SCROLL_SUFFIX + "_t0" + COLOR_SUFFIX + DETAIL_SUFFIX + NORMAL_SUFFIX + SPEC_SUFFIX + SCORCH_SUFFIX + MAT_FEATURE_SUFFIX + HERO_SUFFIX );
	#endif
#elif "@blendFunc@" == "Blend"
	techniqueSet( NAME_PREFIX + TEX_SCROLL_SUFFIX + "_b0" + COLOR_SUFFIX + DETAIL_SUFFIX + NORMAL_SUFFIX + SPEC_SUFFIX + SCORCH_SUFFIX + MAT_FEATURE_SUFFIX + HERO_SUFFIX );
#else
	#error "blendFunc '@blendFunc@' with alphaTest '@alphaTest@' not supported for phong materials"
#endif


textureTable
{
	#if "$colorMap$" == ""
		#error "colorMap may not be blank in phong materials"
	#endif
	"colorMap" = streamable gammaMap( "@tileColor@", "@filterColor@", "$colorMap$", @nopicmipColor@ ) "@formatColor@" : "colorMap";

	#if USE_DETAIL_MAP
		"detailMap" = DETAIL_STREAMABLE normalMap( "tile both", "@filterDetail@", "$detailMap$", @nopicmipDetail@ ) NORMAL_MAP_FORMAT : "normalMap";
	#endif

	#if NORMAL_MAP_IMAGE == "$identityNormalMap"
		"normalMap" = map( "tile both", "nomip nearest", "$identityNormalMap", true ) "<auto compression>" : "normalMap";
	#else
		"normalMap" = streamable normalMap( NORMAL_MAP_TILE, NORMAL_MAP_FILTER, NORMAL_MAP_IMAGE, NORMAL_MAP_NOPICMIP ) NORMAL_MAP_FORMAT : "normalMap";
	#endif

	#if USE_SPEC_MAP
		"specularMap" = streamable composite
		(
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).r,
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).g,
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).b,
			roughMap( "@tileSpecular@", "@filterSpecular@", COSINE_POWER_IMAGE, @nopicmipSpecular@, "normalMap" )
		) SPECULAR_FORMAT : "specularMap";
	#endif

	"eyeballGlossMap" = streamable map( "@tileColor@", "@filterColor@", "$colorMap00$", @nopicmipColor@ ) "@formatColor@" : "colorMap00";
	"eyeballSphereMap" = streamable map( "@tileColor@", "@filterColor@", "$colorMap01$", @nopicmipColor@ ) "@formatColor@" : "colorMap01";
}


constantTable
{
	#if USE_DETAIL_MAP
		"detailScale" = float4( @detailScaleX@ * imageWidth( "$colorMap$" ) / imageWidth( "$detailMap$" ), @detailScaleY@ * imageHeight( "$colorMap$" ) / imageHeight( "$detailMap$" ), @detailScaleHeight@, 0 );
	#endif
	#if USE_SPEC_MAP
		"envMapParms" = float4( @reflectionProbeAmount@, 1, 1, @specAmount@ );
	#endif

	"eyeballGlossScale" = float1(@cg00_x@);
	"eyeballEyeScale" = float1(@cg00_y@);
	"eyeballEyeCenter" = float3( @cg01_x@, @cg01_y@, @cg01_z@ );
}

allocReflectionProbe();

refImageByKey( "colorMap" );
