#if "@formatNormal@" == "<auto compression>"
	#if TARGET_PLATFORM == "xenon"
		#define NORMAL_MAP_FORMAT	"DXN"
	#else
		#define NORMAL_MAP_FORMAT	"DXT5"
	#endif
#else
	#define NORMAL_MAP_FORMAT	"@formatNormal@"
#endif

#if "@noStreamColor@" == "1"
#define COLOR_STREAMABLE
#else
#define COLOR_STREAMABLE streamable
#endif

#if "@noStreamDetail@" == "1"
#define DETAIL_STREAMABLE
#else
#define DETAIL_STREAMABLE streamable
#endif

//
// default images
//
#define COLOR_SUFFIX	"c0"

#if "$normalMap$" == "" || "$normalMap$" == "$identityNormalMap"
	#define NORMAL_MAP_TILE 	"tile both"
	#define NORMAL_MAP_FILTER	"nomip nearest"
	#define NORMAL_MAP_IMAGE 	"$identityNormalMap"
	#define NORMAL_MAP_NOPICMIP	1
	#define NORMAL_SUFFIX		""
#else
	#define NORMAL_MAP_TILE		"@tileNormal@"
	#define NORMAL_MAP_FILTER	"@filterNormal@"
	#define NORMAL_MAP_IMAGE	"$normalMap$"
	#define NORMAL_MAP_NOPICMIP	@nopicmipNormal@
	#define NORMAL_SUFFIX		"n0"
#endif

#define USE_SPEC_MAP 1
#define SPEC_SUFFIX			"s0"

#define WEAPON_SUFFIX		"_wpn"

#if "$specColorMap$" != ""
	#define SPEC_COLOR_IMAGE	"$specColorMap$"
#else
	#define SPEC_COLOR_IMAGE	"$white"
#endif
#if "$cosinePowerMap$" != ""
	#define COSINE_POWER_IMAGE	"$cosinePowerMap$"
#else
	#define COSINE_POWER_IMAGE	"$white"
#endif

#if "@formatSpecular@" == "<auto compression>"
	#define SPECULAR_FORMAT		"DXT5"
#else
	#define SPECULAR_FORMAT		"@formatSpecular@"
#endif

#if "$occMap$" != ""
		#define OCC_MAP		"$occMap$"
#else
		#define OCC_MAP		"$white"
#endif

#if "$specReflectionMap$" != ""
		#define SPEC_RELF_MAP		"$specReflectionMap$"
#else
		#define SPEC_RELF_MAP		"$white"
#endif

#define OCC_FORMAT		"DXT5"

#define	USE_DETAIL_MAP	("$detailMap$" != "")
#if USE_DETAIL_MAP
	#define DETAIL_SUFFIX	"d0"
#else
	#define DETAIL_SUFFIX	""
#endif

#include "commonsetup.template"

#if @texScroll@
	#define TEX_SCROLL_SUFFIX "_scroll"
#else
	#define TEX_SCROLL_SUFFIX ""
#endif

#if @subLayerScroll@
	#define SUBLAYERSCROLL_SUFFIX "_sls"
	#define USE_SUBLAYERSCROLL 1
#else
	#define SUBLAYERSCROLL_SUFFIX ""
	#define USE_SUBLAYERSCROLL 0
#endif

#if @scorchable@
	#define SCORCH_SUFFIX "_sco"
#else
	#define SCORCH_SUFFIX ""
#endif

#if "@heroLight@" == "1" 
	#define HERO_SUFFIX "_hero"
#else
	#define HERO_SUFFIX ""
#endif

#include "objective_colors.template"

#if @marksDirectionFade@ && "@blendFunc@" == "Blend" && "@materialType@" == "impact mark"
	#define MARK_DIRFADE_SUFFIX "_markdf"
#else
	#define MARK_DIRFADE_SUFFIX ""
#endif

#if @adsZscaleOn@
	#define MAT_FEATURE_SUFFIX "_adszscale"
#else
	#define MAT_FEATURE_SUFFIX ""
#endif


#if "@customString@" == "Skin"
	#define SKIN_SUFFIX "_skin"
	#if "@blendFunc@" != "Replace" || "@alphaTest@" != "Always"
		#error "Only Replace Always materials support the Skin shader."
	#endif
#else
	#define SKIN_SUFFIX ""
#endif

#if @noReceiveDynamicShadow@
	#define NAME_PREFIX "l"
#else
	#define NAME_PREFIX "l_sm"
#endif

#define USE_CAUSTICS 0
#define CAUSTICS_PREFIX ""

#define USE_COLOR_DETAIL_MAP 1
#define COLOR_DETAIL_SUFFIX "_clrdtl"

#define USE_SPEC_DETAIL_MAP 0
#define SPEC_DETAIL_SUFFIX ""

#define SEETHRU_SUFFIX ""
#define SEETHRU_MARK_PARALLAX 0


#if "@blendFunc@" == "Add"
	#error "additive not allowed on weapon phong materials"
#elif "@blendFunc@" == "Replace"
	#if "@alphaTest@" == "Always"
		techniqueSet( NAME_PREFIX + TEX_SCROLL_SUFFIX + SKIN_SUFFIX + "_r0" + COLOR_SUFFIX + DETAIL_SUFFIX + NORMAL_SUFFIX + SPEC_SUFFIX + WEAPON_SUFFIX + SCORCH_SUFFIX + SUBLAYERSCROLL_SUFFIX + MAT_FEATURE_SUFFIX + COLOR_DETAIL_SUFFIX + SPEC_DETAIL_SUFFIX + SEETHRU_SUFFIX + CAUSTICS_PREFIX + HERO_SUFFIX + OBJ_COLORS_SUFFIX );
	#else
		techniqueSet( NAME_PREFIX + TEX_SCROLL_SUFFIX + "_t0" + COLOR_SUFFIX + DETAIL_SUFFIX + NORMAL_SUFFIX + SPEC_SUFFIX + WEAPON_SUFFIX + SCORCH_SUFFIX + SUBLAYERSCROLL_SUFFIX + MAT_FEATURE_SUFFIX + COLOR_DETAIL_SUFFIX + SPEC_DETAIL_SUFFIX + SEETHRU_SUFFIX + CAUSTICS_PREFIX + HERO_SUFFIX + OBJ_COLORS_SUFFIX );
	#endif
#elif "@blendFunc@" == "Blend"
	techniqueSet( NAME_PREFIX + TEX_SCROLL_SUFFIX + "_b0" + COLOR_SUFFIX + DETAIL_SUFFIX + NORMAL_SUFFIX + SPEC_SUFFIX + WEAPON_SUFFIX + SCORCH_SUFFIX + SUBLAYERSCROLL_SUFFIX + MAT_FEATURE_SUFFIX + MARK_DIRFADE_SUFFIX + COLOR_DETAIL_SUFFIX + SPEC_DETAIL_SUFFIX + SEETHRU_SUFFIX + CAUSTICS_PREFIX + HERO_SUFFIX + OBJ_COLORS_SUFFIX );
#else
	#error "blendFunc '@blendFunc@' with alphaTest '@alphaTest@' not supported for phong materials"
#endif


textureTable
{
	#if "$colorMap$" == ""
		#error "colorMap may not be blank in phong materials"
	#endif
	"colorMap" = COLOR_STREAMABLE gammaMap( "@tileColor@", "@filterColor@", "$colorMap$", @nopicmipColor@ ) "@formatColor@" : "colorMap";


	#if USE_COLOR_DETAIL_MAP
		#if "$colorDetailMap$" == ""
			"colorDetailMap" = map( "tile both", "mip standard (2x bilinear)", "texture_assets\detail_map\weapon_camo_neutral.tga", false ) "<auto compression>" : "colorMap07";
		#else
			"colorDetailMap" = map( "tile both", "@filterColorDetail@", "$colorDetailMap$", @nopicmipColorDetail@ ) "@formatColorDetail@" : "colorMap07";
		#endif
	#endif

	#if USE_DETAIL_MAP
		"detailMap" = DETAIL_STREAMABLE normalMap( "tile both", "@filterDetail@", "$detailMap$", @nopicmipDetail@ ) NORMAL_MAP_FORMAT : "normalMap";
	#endif

	#if NORMAL_MAP_IMAGE == "$identityNormalMap"
		"normalMap" = map( "tile both", "nomip nearest", "$identityNormalMap", true ) "<auto compression>" : "normalMap";
		#define ROUGHNESS_NORMALMAP "normalMap"
	#else
		"normalMap" = streamable normalMap( NORMAL_MAP_TILE, NORMAL_MAP_FILTER, NORMAL_MAP_IMAGE, NORMAL_MAP_NOPICMIP ) NORMAL_MAP_FORMAT : "normalMap";
		#define ROUGHNESS_NORMALMAP "normalMap"
	#endif

	#if USE_SPEC_MAP
		"specularMap" = streamable composite
		(
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).r,
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).g,
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).b,
			roughMap( "@tileSpecular@", "@filterSpecular@", COSINE_POWER_IMAGE, @nopicmipSpecular@, ROUGHNESS_NORMALMAP )
		) SPECULAR_FORMAT : "specularMap";
		#if USE_SPEC_DETAIL_MAP
			"specularDetailMap" = streamable composite
			(
				map( "@tileSpecular@", "@filterSpecular@", "$specDetailMap$", @nopicmipSpecular@ ).r,
				map( "@tileSpecular@", "@filterSpecular@", "$specDetailMap$", @nopicmipSpecular@ ).g,
				map( "@tileSpecular@", "@filterSpecular@", "$specDetailMap$", @nopicmipSpecular@ ).b
			) SPECULAR_DETAIL_FORMAT : "specularMap";
		#endif
		
		"colorMap15" = streamable composite
		(
			map( "@tileOcc@", "@filterOcc@", SPEC_RELF_MAP, 0 ).r,
			map( "@tileOcc@", "@filterOcc@", SPEC_RELF_MAP, 0 ).g,
			map( "@tileOcc@", "@filterOcc@", SPEC_RELF_MAP, 0 ).b,
			map( "@tileOcc@", "@filterOcc@", OCC_MAP, 0 )
		) OCC_FORMAT : "colorMap15";
	#endif

	#if USE_SUBLAYERSCROLL
		"subLayerBaseTexture" = streamable map( "@tileColor@", "@filterColor@", "$colorMap04$", @nopicmipColor@ ) "@formatColor@" : "colorMap04";
		"subLayerMultiplyTexture" = streamable map( "@tileColor@", "@filterColor@", "$colorMap05$", @nopicmipColor@ ) "@formatColor@" : "colorMap05";
	#endif
	#if USE_CAUSTICS
		"causticsMap" = streamable map( NORMAL_MAP_TILE, NORMAL_MAP_FILTER, "$colorMap00$", NORMAL_MAP_NOPICMIP ) "@formatColor@" : "colorMap00";
	#endif
}


constantTable
{
	#if USE_COLOR_DETAIL_MAP
		"colorDetailScale" = float4( @colorDetailScaleX@, @colorDetailScaleY@, 0, 0 );
	#endif


	#if USE_DETAIL_MAP
		"detailScale" = float4( @detailScaleX@ * imageWidth( "$colorMap$" ) / imageWidth( "$detailMap$" ), @detailScaleY@ * imageHeight( "$colorMap$" ) / imageHeight( "$detailMap$" ), @detailScaleHeight@, 0 );
	#endif

	#if USE_SPEC_MAP
		"envMapParms" = float4( @reflectionProbeAmount@, 1, 1, @specAmount@ );

		#if USE_SPEC_DETAIL_MAP
			"specDetailScale" = float4( @specDetailScaleX@ * imageWidth( "$specDetailMap$" ) / imageWidth( "$specDetailMap$" ), @specDetailScaleY@ * imageHeight( "$specDetailMap$" ) / imageHeight( "$specDetailMap$" ), 0, 0 );
		#endif
	#endif

	"dynamicFoliageSunDiffuseMinMax" = float2( @dynamicFoliageSunDiffuseMin@, @dynamicFoliageSunDiffuseMax@ );

	#if USE_SUBLAYERSCROLL
		"subLayerBaseScroll" = float2( @uScroll00@, @vScroll00@ );
		"subLayerMultiplyScroll" = float2( @uScroll01@, @vScroll01@ );
	#endif

	#if USE_CAUSTICS
		"causticsData1" = float4(@cg00_x@, @cg00_y@, @cg00_z@, @cg00_w@);
		"causticsData2" = float4(@cg01_x@, @cg01_y@, @cg01_z@, @cg01_w@);
		"causticsData3" = float4(@cg02_x@, @cg02_y@, @cg02_z@, @cg02_w@);
	#endif

	#if SEETHRU_MARK_PARALLAX
		"seethruParallax" = float3( @seethruprlx_height@, @seethruprlx_solidrad@, @seethruprlx_alphapower@ );
	#endif

	OBJ_COLORS_CONSTANTS
}

allocReflectionProbe();

refImageByKey( "colorMap" );
