#if "@formatNormal@" == "<auto compression>"
	#if TARGET_PLATFORM == "xenon"
		#define NORMAL_MAP_FORMAT	"DXN"
	#else
		#define NORMAL_MAP_FORMAT	"DXT5"
	#endif
#else
	#define NORMAL_MAP_FORMAT	"@formatNormal@"
#endif

#if "@noStreamColor@" == "1"
#define COLOR_STREAMABLE
#else
#define COLOR_STREAMABLE streamable
#endif

#if "@noStreamDetail@" == "1"
#define DETAIL_STREAMABLE
#else
#define DETAIL_STREAMABLE streamable
#endif

//
// default images
//
#if ("$normalMap$" == "" || "$normalMap$" == "$identityNormalMap") && "$cosinePowerMap$" == "" && "$specColorMap$" == ""
	#define NORMAL_MAP_TILE 	"tile both"
	#define NORMAL_MAP_FILTER	"nomip nearest"
	#define NORMAL_MAP_IMAGE 	"$identityNormalMap"
	#define NORMAL_MAP_ANIMRATE	0
	#define NORMAL_MAP_NOPICMIP	1

	#define USE_SPEC_MAP	0
	#define NORMAL_SUFFIX	""
	#define SPEC_SUFFIX		""
#else
	#if "$normalMap$" == "" || "$normalMap$" == "$identityNormalMap"
		#define NORMAL_MAP_TILE 	"tile both"
		#define NORMAL_MAP_FILTER	"nomip nearest"
		#define NORMAL_MAP_IMAGE 	"$identityNormalMap"
		#define NORMAL_MAP_NOPICMIP	1
		#define NORMAL_SUFFIX		""
	#else
		#define NORMAL_MAP_TILE		"@tileNormal@"
		#define NORMAL_MAP_FILTER	"@filterNormal@"
		#define NORMAL_MAP_IMAGE	"$normalMap$"
		#define NORMAL_MAP_NOPICMIP	@nopicmipNormal@
		#define NORMAL_SUFFIX		"n0"
	#endif
#endif

	#if "$specColorMap$" != ""
		#define SPEC_COLOR_IMAGE	"$specColorMap$"
	#else
		#define SPEC_COLOR_IMAGE	"$white"
	#endif
	
	#if "$cosinePowerMap$" != ""
		#define COSINE_POWER_IMAGE	"$cosinePowerMap$"
	#else
		#define COSINE_POWER_IMAGE	"$white"
	#endif

	#if "@formatSpecular@" == "<auto compression>"
		#define SPECULAR_FORMAT		"DXT5"
	#else
		#define SPECULAR_FORMAT		"@formatSpecular@"
	#endif
#define USE_SPECULAR		1

#define	USE_DETAIL_MAP	("$detailMap$" != "")

#include "commonsetup.template"

#if @texScroll@
	#error "flag materials do not support texture scrolling"
#endif

/*
#if "@blendFunc@" == "Replace"
	#if "@alphaTest@" == "GE128"
		#if USE_DETAIL_MAP
			techniqueSet( "l_sm_flag_t0c0d0n0s0" );
		#else
			techniqueSet( "l_sm_flag_t0c0n0s0" );
		#endif
	#else
		#error "flag materials only support alphaTest GE128"
	#endif
#elif "@blendFunc@" == "Blend"
	#error "flag materials only support blendFunc Replace"
#endif
*/

#if USE_DETAIL_MAP
	#define DETAIL_SUFFIX "d0"
#else
	#define DETAIL_SUFFIX ""
#endif
	
#if "@blendFunc@" == "Add"
	#error "flag materials does not support blendFunc Add"
#elif "@blendFunc@" == "Replace"
	#if "@alphaTest@" == "Always"
		techniqueSet( "l_sm_flag_r0c0" + DETAIL_SUFFIX + "n0s0" );
	#else
		techniqueSet( "l_sm_flag_t0c0" + DETAIL_SUFFIX + "n0s0" );
	#endif
#elif "@blendFunc@" == "Blend"
	techniqueSet( "l_sm_flag_b0c0" + DETAIL_SUFFIX + "n0s0" );
#else
	#error "blendFunc '@blendFunc@' with alphaTest '@alphaTest@' not supported for phong materials"
#endif


textureTable
{
	#if "$colorMap$" == ""
		#error "colorMap may not be blank in phong materials"
	#endif
	"colorMap" = COLOR_STREAMABLE gammaMap( "@tileColor@", "@filterColor@", "$colorMap$", @nopicmipColor@ ) "@formatColor@" : "colorMap";

	#if USE_DETAIL_MAP
		"detailMap" = DETAIL_STREAMABLE normalMap( "tile both", "@filterDetail@", "$detailMap$", @nopicmipDetail@ ) NORMAL_MAP_FORMAT : "normalMap";
	#endif

	#if NORMAL_MAP_IMAGE == "$identityNormalMap"
		"normalMap" = map( "tile both", "nomip nearest", "$identityNormalMap", true ) "<auto compression>" : "normalMap";
	#else
		"normalMap" = streamable normalMap( NORMAL_MAP_TILE, NORMAL_MAP_FILTER, NORMAL_MAP_IMAGE, NORMAL_MAP_NOPICMIP ) NORMAL_MAP_FORMAT : "normalMap";
	#endif


	#if USE_SPECULAR
  		"specularMap" = streamable composite
		(
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).r,
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).g,
			specMap( "@tileSpecular@", "@filterSpecular@", SPEC_COLOR_IMAGE, @nopicmipSpecular@ ).b,
			roughMap( "@tileSpecular@", "@filterSpecular@", COSINE_POWER_IMAGE, @nopicmipSpecular@, "normalMap" )
		) SPECULAR_FORMAT : "specularMap";
	#endif
}


constantTable
{
	#if USE_DETAIL_MAP
		"detailScale" = float4( @detailScaleX@ * imageWidth( "$colorMap$" ) / imageWidth( "$detailMap$" ), @detailScaleY@ * imageHeight( "$colorMap$" ) / imageHeight( "$detailMap$" ), @detailScaleHeight@, 0 );
	#endif


	#if USE_SPECULAR
		"envMapParms" = float4( @reflectionProbeAmount@, 1, 1, @specAmount@ );
	#endif
}

allocReflectionProbe();

refImageByKey( "colorMap" );
