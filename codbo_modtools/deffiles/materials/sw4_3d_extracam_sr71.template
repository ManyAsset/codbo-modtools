
#if ( ( "@blendFunc@"== "Replace" ) && ( "@alphaTest@" == "Always" ) )
	techniqueSet( "@SW4_MaterialType@" ); 
#else
	techniqueSet( "@SW4_MaterialType@_transparent" ); 
#endif

// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
	
#include "commonsetup.template" 

// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
	
#define SPEC_MAP_FORMAT 	 	  "DXT1"
      	
#if TARGET_PLATFORM == "xenon"
            #define NORMAL_MAP_FORMAT     "DXN"
	    #else
	        #define NORMAL_MAP_FORMAT     "DXT5"
	    #endif


// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
	
textureTable
{
	"C000_File" =  map( "tile both", "mip standard (2x bilinear)", "$colorMap15$", 1 ) "<auto compression>" : "colorMap";
	"Vignette" = streamable map( "no tile", "mip (1x bilinear)", "$colorMap04$", 0 ) "<auto compression>" : "colorMap";
	"LiveFeed" = streamable map( "no tile", "mip most expensive (4x trilinear)", "$colorMap08$", 0 ) "<auto compression>" : "colorMap";
	"SateliteBorder" = streamable map( "no tile", "mip (1x bilinear)", "$colorMap07$", 0 ) "<auto compression>" : "colorMap";
	"Overlay" = map( "tile both", "mip most expensive (4x trilinear)", "$colorMap02$", 1 ) "<auto compression>" : "colorMap";
	"Lines" = streamable map( "tile both", "mip most expensive (4x trilinear)", "$colorMap14$", 0 ) "<auto compression>" : "colorMap";
	"OverlayNoise" = streamable map( "tile both", "mip most expensive (4x trilinear)", "$colorMap00$", 0 ) "<auto compression>" : "colorMap";
	"Lookup" =  map( "tile both", "mip (1x bilinear)", "$colorMap01$", 0 ) "<auto compression>" : "colorMap";
	"LightVignette" = streamable map( "tile both", "mip (1x bilinear)", "$colorMap12$", 0 ) "<auto compression>" : "colorMap";
	"RadiantDiffuse" = map( "tile both", "mip (1x bilinear)", "sw4\textures\sw4.tga", 1 ) "Uncompressed" : "colorMap";
}

// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
	
constantTable
{
	"Reflection_Amount" = float1( @cg28_x@ );
	"VignetteIntensity" = float4( @cg10_x@, @cg10_y@, @cg10_z@, @cg10_w@ );
	"ScanlinePower" = float1( @cg05_x@ );
	"ScanlineColor" = float3( @cg06_x@, @cg06_y@, @cg06_z@ );
	"ScanlineSpeed" = float1( @cg07_x@ );
	"ScanlineIntensity" = float1( @cg08_x@ );
	"MonitorScale" = float2( @cg02_x@, @cg02_y@ );
	"BlowoutColor" = float4( @cg25_x@, @cg25_y@, @cg25_z@, @cg25_w@ );
	"FinalGamma" = float1( @cg00_x@ );
	"FinalExposure" = float1( @cg01_x@ );
	"StaticScale" = float2( @cg03_x@, @cg03_y@ );
	"StaticAmount" = float1( @cg04_x@ );
	"SoldierColor" = float4( @cg15_x@, @cg15_y@, @cg15_z@, @cg15_w@ );
	"OverallAmount" = float1( @cg09_x@ );
	"SepiaControls" = float4( @cg11_x@, @cg11_y@, @cg11_z@, @cg11_w@ );
	"BrightColor" = float4( @cg12_x@, @cg12_y@, @cg12_z@, @cg12_w@ );
	"DarkColor" = float4( @cg13_x@, @cg13_y@, @cg13_z@, @cg13_w@ );
	"VignetteIntensity2" = float4( @cg24_x@, @cg24_y@, @cg24_z@, @cg24_w@ );
	"FirstGamma" = float1( @cg23_x@ );
	"FirstExposure" = float1( @cg22_x@ );
	//"ui3dWindowId" = int1( @ui3dWindowId@ );
	"PreviewCompID" = float1( -1 );
}
	
// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
	
allocReflectionProbe();

// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
	
refImage( "$white" );
